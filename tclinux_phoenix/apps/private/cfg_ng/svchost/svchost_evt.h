
/***************************************************************
Copyright Statement:

This software/firmware and related documentation (EcoNet Software) 
are protected under relevant copyright laws. The information contained herein 
is confidential and proprietary to EcoNet (HK) Limited (EcoNet) and/or 
its licensors. Without the prior written permission of EcoNet and/or its licensors, 
any reproduction, modification, use or disclosure of EcoNet Software, and 
information contained herein, in whole or in part, shall be strictly prohibited.

EcoNet (HK) Limited  EcoNet. ALL RIGHTS RESERVED.

BY OPENING OR USING THIS FILE, RECEIVER HEREBY UNEQUIVOCALLY 
ACKNOWLEDGES AND AGREES THAT THE SOFTWARE/FIRMWARE AND ITS 
DOCUMENTATIONS (ECONET SOFTWARE) RECEIVED FROM ECONET 
AND/OR ITS REPRESENTATIVES ARE PROVIDED TO RECEIVER ON AN AS IS 
BASIS ONLY. ECONET EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES, 
WHETHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED 
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, 
OR NON-INFRINGEMENT. NOR DOES ECONET PROVIDE ANY WARRANTY 
WHATSOEVER WITH RESPECT TO THE SOFTWARE OF ANY THIRD PARTIES WHICH 
MAY BE USED BY, INCORPORATED IN, OR SUPPLIED WITH THE ECONET SOFTWARE. 
RECEIVER AGREES TO LOOK ONLY TO SUCH THIRD PARTIES FOR ANY AND ALL 
WARRANTY CLAIMS RELATING THERETO. RECEIVER EXPRESSLY ACKNOWLEDGES 
THAT IT IS RECEIVERS SOLE RESPONSIBILITY TO OBTAIN FROM ANY THIRD 
PARTY ALL PROPER LICENSES CONTAINED IN ECONET SOFTWARE.

ECONET SHALL NOT BE RESPONSIBLE FOR ANY ECONET SOFTWARE RELEASES 
MADE TO RECEIVERS SPECIFICATION OR CONFORMING TO A PARTICULAR 
STANDARD OR OPEN FORUM. RECEIVER'S SOLE AND EXCLUSIVE REMEDY AND 
ECONET'S ENTIRE AND CUMULATIVE LIABILITY WITH RESPECT TO THE ECONET 
SOFTWARE RELEASED HEREUNDER SHALL BE, AT ECONET'S SOLE OPTION, TO 
REVISE OR REPLACE THE ECONET SOFTWARE AT ISSUE OR REFUND ANY SOFTWARE 
LICENSE FEES OR SERVICE CHARGES PAID BY RECEIVER TO ECONET FOR SUCH 
ECONET SOFTWARE.
***************************************************************/

#ifndef __SVCHOST_EVENT_H
#define __SVCHOST_EVENT_H

#define EVT_CFG_INTERNAL         		"cfg.internal"
#define EVT_CFG_EXTERNAL				"cfg.external"
#define EVT_PON_INTERNAL        		"pon.internal"
#define EVT_PON_EXTERNAL				"pon.external"
#define EVT_WAN_INTERNAL                "wan.internal"
#define EVT_WAN_EXTERNAL				"wan.external"
#define EVT_WAN_RELATED_INTERNAL		"wanrelated.internal"
#define EVT_WAN_RELATED_EXTERNAL		"wanrelated.external"
#define EVT_WLAN_INTERNAL        		"wlan.internal"
#define EVT_WLAN_EXTERNAL				"wlan.external"
#define EVT_CENTRAL_CTRL_EXTERNAL		"central.ctrl.external"
#define EVT_CENTRAL_CTRL_INTERNAL		"central.ctrl.internal"
#define EVT_OTHER_INTERNAL				"other.internal"
#define EVT_OTHER_EXTERNAL				"other.external"
#define EVT_VOIP_INTERNAL				"voip.internal"
#define EVT_VOIP_EXTERNAL				"voip.external"
#define EVT_MESH_INTERNAL				"mesh.internal"
#define EVT_MESH_EXTERNAL				"mesh.external"

#define EVT_BUF_LENGTH					(64)
#define EVT_TYPE_LENGTH				    (32)

typedef enum evt_pon_ext_id{
	EVT_PON_TRAFFIC_STATUS = 1,
	EVT_ETHER_WAN_STATUS = 2,
	EVT_DSL_WAN_STATUS = 3,
	EVT_APCLI_WAN_STATUS = 4,
	EVT_MESH_BH_STATUS = 5,
}evt_pon_ext_id_t;

enum _evt_type_
{
	EVT_WAN_INTERNAL_TYPE  = 1,
	EVT_WAN_EXTERNAL_TYPE  = 2,
	EVT_VOIP_INTERNAL_TYPE = 3,
	EVT_VOIP_EXTERNAL_TYPE = 4,
	EVT_MESH_INTERNAL_TYPE = 5,
	EVT_MESH_EXTERNAL_TYPE = 6,
	EVT_WAN_RELATED_INTERNAL_TYPE = 7,
	EVT_CC_INTERNAL_TYPE   = 9,
	EVT_CC_EXTERNAL_TYPE   = 10,
};

/*evt id takeoff in 0x40 units*/
enum _evt_id_
{ 
	/*WAN Internal event, Notcie 3~6 can't change, msg send_ext use*/
	/*WAN Internal event, Notcie 13~14 can't change, msg send_ext use*/
	EVT_CFG_WAN_ENTRY_DELETE    = 0x1,
	EVT_CFG_WAN_ENTRY_UPDATE    = 0x2,
	EVT_WAN_CONN_GETV4          = 0x3,
	EVT_WAN_CONN_LOSTV4         = 0x4,
	EVT_WAN_CONN_GETV6          = 0x5,
	EVT_WAN_CONN_LOSTV6         = 0x6,
	EVT_CFG_WAN_ENTRY_BOOT      = 0x7,
	EVT_CFG_WAN_VLANBIND_UPDATE	= 0x8,
	EVT_CFG_WAN_VETHPAIR_UPDATE	= 0x9,
	EVT_WAN_RELEASE6			= 0xa,
	EVT_WAN_RENEW6				= 0xb,
	EVT_CFG_WAN_ENTRY_BOOT2		= 0xc,
	EVT_WAN_AP_BRIDGE_GET4      = 0xd,
	EVT_WAN_AP_BRIDGE_LOST4     = 0xe,
	EVT_WAN_AP_STATUS_UPDATE    = 0xf,
	EVT_WAN_AP_START_BRIDGE     = 0x10,
	EVT_WAN_AP_START_CLIENT     = 0x11,
	EVT_WAN_AP_MODE_UPDATE      = 0x12,
	EVT_WAN_AP_LINK_UPDATE      = 0x13,
	EVT_CFG_WAN_SDN_UPDATE	    = 0x14,
	EVT_CFG_WANCFGDATA_ENTRY_UPDATE     = 0x15,
	EVT_CFG_WAN_COMMON_UPDATE   = 0x16,
	EVT_CFG_WAN_BSSADDR_UPDATE  = 0x17,

	/*WAN external event*/
	EVT_WAN_ENTRY_DELETE 	    = 0x40,  /*64*/
	EVT_WAN_ENTRY_UPDATE 	    = 0x41,  /*65*/
	EVT_WAN_IPV4_UP 		    = 0x42,  /*66*/
	EVT_WAN_IPV4_DOWN 		    = 0x43,  /*67*/
	EVT_WAN_IPV6_UP 		    = 0x44,  /*68*/
	EVT_WAN_IPV6_DOWN 		    = 0x45,  /*69*/
	EVT_WAN_BRIDGE_UP 		    = 0x46,  /*70*/
	EVT_WAN_BRIDGE_DOWN		    = 0x47,  /*71*/
	EVT_WAN_UPDATE_CONNREQ_PORT = 0x48,  /*72*/
	EVT_WAN_UPDATE_DNSINFO 		= 0x49,  /*73*/
	EVT_WAN_XPON_UP 			= 0x4a,  /*74*/
	EVT_WAN_XPON_DOWN			= 0x4b,  /*75*/

	/*xpon evt*/
	EVT_XPON_UP 	 		    = 0x80,  /*128*/
	EVT_XPON_DOWN 	 		    = 0x81,  /*129*/


	/*WAN_RELATED Internal event*/
	EVT_CFG_WAN_RELATED_FIREWALL_UPDATE			= 0xC0,
	EVT_CFG_WAN_RELATED_FIREWALL_BOOT,
	EVT_CFG_WAN_RELATED_ATTACK_UPDATE,
	EVT_CFG_WAN_RELATED_IPSEC_UPDATE,
	EVT_CFG_WAN_RELATED_ACL_UPDATE,
	EVT_CFG_WAN_RELATED_ACL_BOOT,
	EVT_CFG_WAN_RELATED_TIMEZONE_BOOT,
	EVT_CFG_WAN_RELATED_TIMEZONE_UPDATE,
	EVT_CFG_WAN_RELATED_APPFILTER_UPDATE,
	EVT_CFG_WAN_RELATED_QOS_UPDATE,
	EVT_CFG_WAN_RELATED_QOS_BOOT,
	EVT_CFG_WAN_RELATED_PPPOESIMULATE,
	EVT_CFG_WAN_RELATED_CUCPING,
	EVT_CFG_WAN_RELATED_URLFILTER_UPDATE,
	EVT_CFG_WAN_RELATED_DNSMASKRESTART,
	EVT_CFG_WAN_RELATED_DDNS_UPDATE,
	EVT_CFG_WAN_RELATED_IPMACFILTER_UPDATE,
	EVT_CFG_WAN_RELATED_IGMPPROXY_UPDATE,
	EVT_CFG_WAN_RELATED_MLDPROXY_UPDATE,
	EVT_CFG_WAN_RELATED_DDNS_BOOT,
	EVT_CFG_WAN_RELATED_INCOMINGFILTER_BOOT,
	EVT_CFG_WAN_RELATED_INCOMINGFILTER_UPDATE,
	EVT_CFG_WAN_RELATED_DNSFILTER_UPDATE,
	EVT_CFG_WAN_RELATED_VIRSERVER_UPDATE,
	EVT_CFG_WAN_RELATED_VIRSERVER_ENTRY_UPDATE,
	EVT_CFG_WAN_RELATED_VIRSERVER_ENTRY_DELETE,
	EVT_CFG_WAN_RELATED_VIRSERVER_BOOT,
	EVT_CFG_WAN_RELATED_ATTACH_UPDATE,
	EVT_CFG_WAN_RELATED_VPN_BOOT,
	EVT_CFG_WAN_RELATED_VPN_UPDATE,
	EVT_CFG_WAN_RELATED_VPN_IP_DOMAIN_UPDATE,
	EVT_CFG_WAN_RELATED_VPN_MAC_UPDATE,
	EVT_CFG_WAN_RELATED_DEVICE_ACCOUNT_UPDATE,
	EVT_CFG_WAN_RELATED_DEVICE_ACCOUNT_BOOT,
	EVT_CFG_WAN_RELATED_DOWNLINKQOS_UPDATE,
	EVT_CFG_WAN_RELATED_DOWNLINKQOS_BOOT,
	EVT_CFG_WAN_RELATED_VXLAN_BOOT,
	EVT_CFG_WAN_RELATED_VXLAN_UPDATE,
	EVT_CFG_WAN_RELATED_VXLAN_DELETE,
	EVT_CFG_WAN_RELATED_VXLAN_GET4				= 0xF0, /* 240, fixed for vxlan ip get */
	EVT_CFG_WAN_RELATED_VXLAN_LOST4				= 0xF1, /* 241, fixed for vxlan ip lost */
	EVT_CFG_WAN_RELATED_STUN_UPDATE,
	EVT_CFG_WAN_RELATED_STUN_BOOT,

	/*WAN_RELATED external event*/
	EVT_WLAN_UPDATE								= 0x100,
	EVT_WLAN_BOOT,
	EVT_WLAN11AC_BOOT,
	EVT_CFG_WAN_RELATED_IPMACFILTER_BOOT,
	EVT_CFG_WAN_RELATED_URLFILTER_BOOT,
	EVT_WLAN_AP_START_CLIENT,
	EVT_WLAN_AP_STOP_CLIENT,
	EVT_WLAN_BNDSTRG_UPDATE,
	EVT_WLAN_MONITOR_UPDATE,
	EVT_WLAN_MACBLACKLIST_UPDATE,
	EVT_WLAN_MACWHITELIST_UPDATE,
	EVT_WLAN_ROAM11K_UPDATE,
	EVT_WLAN_ROAM11V_UPDATE,
	EVT_WLAN_ROAM,
	EVT_WLAN11AC_ROAM,
	EVT_WLAN_PROBEVSIE_UPDATE,
	EVT_WLAN_PROBERESP_UPDATE,
	EVT_WLAN_PROBERESP_DELETE,
	EVT_WLAN_COLLECT_INFO,
	EVT_WLAN_ACS_UPDATE,
	EVT_WLAN11AC_ACS_UPDATE,
	EVT_WLAN_RATEPRIORITY_UPDATE,
	EVT_WLAN11AC_RATEPRIORITY_UPDATE,
	EVT_WLAN_TRIGGER_MESH_UPDATE,

	/*Other Internal event*/
	EVT_CFG_OTHER_LAN_UPDATE					= 0x140,
	EVT_CFG_OTHER_SAMBA_UPDATE,
	EVT_CFG_OTHER_ARP_RULE_CHG,
	EVT_CFG_OTHER_LAN_BOOT,
	EVT_CFG_OTHER_SAMBA_BOOT,
	EVT_CFG_OTHER_SNMPD_UPDATE,
	EVT_CFG_OTHER_SNMPD_BOOT,
	EVT_CFG_OTHER_UPNPD_UPDATE,
	EVT_CFG_OTHER_UPNPD_BOOT,
	EVT_CFG_OTHER_RADVD_BOOT,
	EVT_CFG_OTHER_RADVD_UPDATE,
	EVT_CFG_OTHER_DHCP6S_BOOT,
	EVT_CFG_OTHER_DHCP6S_UPDATE,
	EVT_CFG_OTHER_DHCPD_BOOT,
	EVT_CFG_OTHER_DHCPD_UPDATE,
	EVT_CFG_OTHER_DHCP_RELAY_BOOT,
	EVT_CFG_OTHER_DHCP_RELAY_UPDATE,
	EVT_CFG_OTHER_PARENTAL_BOOT,
	EVT_CFG_OTHER_PARENTAL_UPDATE,
	EVT_CFG_OTHER_PARENTAL_MAC_BOOT,
	EVT_CFG_OTHER_PARENTAL_MAC_UPDATE,
	EVT_CFG_OTHER_TRAFFICDETAIL_BOOT,
	EVT_CFG_OTHER_TRAFFICDETAIL_UPDATE,
	EVT_CFG_OTHER_TRAFFICMONITOR_BOOT,
	EVT_CFG_OTHER_TRAFFICMONITOR_UPDATE,
	EVT_CFG_OTHER_TRAFFICMIRROR_BOOT,
	EVT_CFG_OTHER_TRAFFICMIRROR_UPDATE,
	EVT_CFG_BEACONVSIE_START,
	EVT_CFG_BEACONVSIE_UPDATE,
	EVT_CFG_OTHER_SPEEDTEST_START,
	EVT_CFG_OTHER_LANHOST2_BOOT,
	EVT_CFG_OTHER_LANHOST2_UPDATE,
	EVT_CFG_OTHER_ACCOUNT_UPDATE,
	EVT_CFG_OTHER_ACCOUNT_BOOT,
	EVT_CFG_OTHER_PROCESS_UPDATE,
	EVT_CFG_OTHER_SNMP_SIGNAL,
	EVT_CFG_OTHER_BRIDGEDATA_UPDATE,
	EVT_CFG_OTHER_SYSLOG_BOOT,
	EVT_CFG_OTHER_SYSLOG_UPDATE,
	EVT_CFG_OTHER_PPPOE_EMULATOR_BOOT,
	EVT_CFG_OTHER_PPPOE_EMULATOR_UPDATE,
	EVT_CFG_OTHER_IPOE_EMULATOR_BOOT,
	EVT_CFG_OTHER_IPOE_EMULATOR_UPDATE,
	EVT_CFG_OTHER_CTDIAGNOSTIC_BOOT,
	EVT_CFG_OTHER_CTDIAGNOSTIC_UPDATE,
	EVT_CFG_OTHER_IPOEDIAG_UPDATE,

	/*Other external event*/
	EVT_CFG_OTHER_VOIP_RESTART					= 0x180,

	/*voip internal event*/
	EVT_CFG_VOIP_SIP_NORMAL_UPDATE				= 0x1C0,
	EVT_CFG_VOIP_H248_NORMAL_UPDATE,
	EVT_CFG_VOIP_SIP_SIMULATE_UPDATE,
	EVT_CFG_VOIP_H248_SIMULATE_UPDATE,
	EVT_VOIP_IAD_START,
	EVT_VOIP_BOOT2_READY,

	/*voip external event*/
	EVT_VOIP_LINE_STATE							= 0x200, 
	EVT_VOIP_REG_STATE_UNREGED,
	EVT_VOIP_REG_STATE_REGED,
	EVT_VOIP_SIMULATE_COMPLETE,
	EVT_VOIP_IAD_COMPLETE,

	/*mesh internal evt*/
	EVT_CFG_UPDATE_DAT							= 0x300, /*768*/
	EVT_CFG_UPDATE_COMMON						= 0x301, /*769*/
	EVT_CFG_UPDATE_MAP							= 0x302, /*770*/
	EVT_CFG_UPDATE_MAPD							= 0x303, /*771*/
	EVT_CFG_UPDATE_STEER						= 0x304, /*772*/
	EVT_CFG_UPDATE_RADIO						= 0x305, /*773*/
	EVT_CFG_ACTION								= 0x306, /*774*/
	EVT_CFG_MESH_BOOT      				        = 0x307, /*775*/
	
	/*mesh external evt*/
	EVT_UPDATE_DAT								= 0x340, /*832*/
	EVT_RENEW_BSSINFO							= 0x341, /*833*/
	EVT_TRIGGER_MESH_UPDATE                     = 0x342, /*834*/


	/*cc external evt*/
	EVT_CC_TRIGGER_MESH_REINIT                  = 0x380, /*896*/
	
	/*debug*/
	EVT_WAN_SRV_DEBUG_LEVEL						= 0x400, /*1024*/
	EVT_DUMP_WAN_SRV_ENTRY_DEV					= 0x401, /*1025*/
	EVT_DUMP_WAN_SRV_ENTRY_PATH					= 0x402, /*1026*/
	EVT_DUMP_WAN_SRV_ALL_ENTRY					= 0x403, /*1027*/
	EVT_WAN_SRV_READY_IPV6_GATEWAY				= 0x404, /*1028*/

	/*voip debug*/
	EVT_VOIP_SRV_DEBUG_LEVEL					= 0x420, /*1056*/

	/*mesh debug*/
	EVT_MESH_SRV_DEBUG_LEVEL					= 0x430, /*1072*/
	/*cc debug*/
	EVT_CC_SRV_DEBUG_LEVEL					    = 0x440, /*1088*/

	/*cfg internal event*/
	EVT_CFG_TCAPI_SAVE							= 0X480,
	EVT_CFG_UPGRADE_FIRMWARE						= 0X481,
	EVT_CFG_BOOT						= 0X482,
	EVT_CFG_SVC_REG								=0X483,
	
	/*cfg external event*/
	EVT_CFG_LOAD_UPDATE	 		    			= 0x500,  
	EVT_CFG_TIMER_BOOT,
	EVT_CFG_TIMER_UPDATE,
};

typedef struct _wan_evt_t
{
	char buf[EVT_BUF_LENGTH];

}wan_evt_t, *pt_wan_evt;

typedef struct _wan_related_evt_t
{
	char buf[EVT_BUF_LENGTH];

}wan_related_evt_t, *pt_wan_related_evt;
typedef struct _wlan__evt_t
{
	char buf[EVT_BUF_LENGTH];

}wlan_evt_t, *pt_wlan_evt;

typedef struct _other_evt_t
{
	char buf[EVT_BUF_LENGTH];
	int flag;

}other_evt_t, *pt_other_evt_t;
typedef struct _cfg_evt_t
{
	char buf[EVT_BUF_LENGTH];

}cfg_evt_t, *pt_cfg_evt;


typedef struct voip_evt_t
{
	int  prevSipStatus;
	int  registResult;
	int  registReason;
	int  voipLineIdx;
	long currentTime;
	char buf[EVT_BUF_LENGTH];
}voip_evt_t, *pt_voip_evt;

typedef struct _mesh_evt_t
{
	char buf[EVT_BUF_LENGTH];

}mesh_evt_t, *pt_mesh_evt;

typedef struct _central_ctrl_evt_t
{
	union 
	{
		char itf_name[16];
	} u;
	char buf[EVT_BUF_LENGTH];

}central_ctrl_evt_t, *pt_central_ctrl_evt;

#define SAMBA_SERVER_SAMBA_COMMIT_FLAG 1
#define SAMBA_SERVER_ACCOUNT_COMMIT_FLAG 2

#endif

